(*/--------------------------------------------------------------------------\*)
(*| 2D and 3D Gaussian functions for visualization of atomic basis functions |*)
(*\--------------------------------------------------------------------------/*)
(**)

i=0; (* Angular moment quantum number for the x-coordinate (0,1,2,...)*)
j=0; (* Angular moment quantum numbers for the y-coordinate (0,1,2,...)*)
k=0; (* Angular moment quantum numbers for the z-coordinate (0,1,2,...)*)
(* i + j + k = l â‰¥ 0; for l = 0 -> s-function (example i,j,k = 0,0,0); l = 1 -> p-function (example i,j,k = 1,0,0); l = 2 -> d-function (example i,j,k = 2,0,0). Just play around with the numbers and see what happens in the plots.*)
a=0.85; (* orbital exponent; large value means a tighter orbital*)
Gi[x_]=x^i*Exp[-a*x^2]; (* Gaussian functions for the x-coordinate *)
Gj[y_]=y^j*Exp[-a*y^2]; (* Gaussian functions for the y-coordinate *)
Gk[z_]=z^j*Exp[-a*z^2];(* Gaussian functions for the z-coordinate *)
(**)
Gij[x_,y_]=x^i*Exp[-a*x^2]*y^j*Exp[-a*y^2]; (* the product of two 1D functions gives the 2D function*)
Gijk[x_,y_,z_]=x^i*Exp[-a*x^2]*y^j*Exp[-a*y^2]*z^j*Exp[-a*z^2]; (* the product of three 1D functions gives the 3D function*)
(**)
(* Plotting the functions *)
cp=ContourPlot[Gij[x,y],{x,-3,3},{y,-3,3},PlotPoints->10,ContourShading->False]
ContourPlot3D[Gijk[x,y,z],{x,-2,2},{y,-2,2},{z,-2,2}]
